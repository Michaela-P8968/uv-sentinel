/*
This example is for a 128x64 size display using I2C to communicate
3 pins are required to interface (2 I2C and one reset)

Adafruit invests time and resources providing this open source code,
All text above, and the splash screen must be included in any redistribution
*/

#include <SPI.h>

#include <Wire.h>

#include <Adafruit_GFX.h>

#include <Adafruit_SSD1306.h>

#define OLED_RESET 4



Adafruit_SSD1306 display(OLED_RESET);

#define NUMFLAKES 10

#define XPOS 0

#define YPOS 1

#define DELTAY 2

int8_t lastTemp = 0;

#define LOGO16_GLCD_HEIGHT 16

#define LOGO16_GLCD_WIDTH 16



static const unsigned char PROGMEM logo16_glcd_bmp[] =

{ B00000000, B11000000,

B00000001, B11000000,

B00000001, B11000000,

B00000011, B11100000,

B11110011, B11100000,

B11111110, B11111000,

B01111110, B11111111,

B00110011, B10011111,

B00011111, B11111100,

B00001101, B01110000,

B00011011, B10100000,

B00111111, B11100000,

B00111111, B11110000,

B01111100, B11110000,

B01110000, B01110000,

B00000000, B00110000 };



#if (SSD1306_LCDHEIGHT != 64)

#error("Height incorrect, please fix Adafruit_SSD1306.h!");

#endif



void setup() {

Serial.begin(9600);

by default, we'll generate the high voltage from the 3.3v line internally! (neat!)

display.begin(SSD1306_SWITCHCAPVCC, 0x3C); initialize with the I2C addr 0x3D (for the 128x64)

init done



Show image buffer on the display hardware.

Since the buffer is intialized with an Adafruit splashscreen

internally, this will display the splashscreen.



display.display();

delay(2000);

Clear the buffer.



display.clearDisplay();

drawing shapes

display.drawPixel(10, 10, WHITE);

display.drawLine(0, 0, i, display.height()-1, WHITE);

display.fillRect(i, i, display.width()-i*2, display.height()-i*2, color%2);

display.drawTriangle(display.width()/2, display.height()/2-i,

display.width()/2-i, display.height()/2+i,

display.width()/2+i, display.height()/2+i, WHITE);

display.fillCircle(display.width()/2, display.height()/2, 10, WHITE);

display.startscrollright(0x00, 0x0F);

text display tests



display.setTextSize(1);

display.setTextColor(WHITE);

display.setCursor(0,0);

display.println("Hello, world!");

display.setTextColor(BLACK, WHITE); 'inverted' text

display.println(3.141592);

display.setTextSize(2);

display.setTextColor(WHITE);

display.print("0x"); display.println(0xDEADBEEF, HEX);

display.display();

delay(2000);

display.clearDisplay();

}



void loop() {

int8_t currTemp = Bean.getTemperature();

if (lastTemp != currTemp) {

display.setTextSize(1);

display.setTextColor(WHITE);

display.setCursor(0,0);

display.println("Temp is:");

display.print(currTemp);

display.println(" Celsius");

display.print(currTemp*1.8+32);

display.println(" Fahrenheit");

display.display();



lastTemp = currTemp;



Bean.sleep(2000);

display.clearDisplay();

}

}
